{"version":3,"file":"555-253f70ca1f7e82726bd0.js","mappings":"+LA8CA,UAvCyBA,KACvB,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,KACzC,EAACC,EAAY,EAACC,IAAkBF,EAAAA,EAAAA,UAAS,IAE/C,OACEG,EAAAA,cAACC,EAAAA,EAAgB,KACfD,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,WACdH,EAAAA,cAAA,MAAIE,UAAWC,EAAAA,QAAAA,OAAS,YAExBH,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,QACdH,EAAAA,cAACI,EAAAA,EAAW,CACVC,YAAa,eACbC,MAAOX,EACPY,KAAK,WACLC,SAAUZ,IAGZI,EAAAA,cAACI,EAAAA,EAAW,CACVC,YAAa,eACbC,MAAOR,EACPS,KAAK,WACLC,SAAUT,KAIdC,EAAAA,cAACS,EAAAA,EAAY,CACXC,KAAK,kBACLC,QAAQ,UACRC,KAAK,IACLC,MAAM,OACNC,MAAOC,IACPC,SAAS,MACTC,QAASA,IAAMC,QAAQC,IAAI,WAGd,C,yGCrCvB,MAAMC,EAAO,CACX,CAAEC,GAAI,EAAGC,KAAMC,EAAAA,EAAUC,qBAAsBd,KAAM,WACrD,CAAEW,GAAI,EAAGC,KAAMC,EAAAA,EAAUE,qBAAsBf,KAAM,WACrD,CAAEW,GAAI,EAAGC,KAAMC,EAAAA,EAAUG,sBAAuBhB,KAAM,YACtD,CAAEW,GAAI,EAAGC,KAAMC,EAAAA,EAAUI,kBAAmBjB,KAAM,iBAkCpD,MA3BqBkB,IAEN,IAFO,SACpBC,GACOD,EAEP,OACE5B,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,WACdH,EAAAA,cAAA,MAAIE,UAAWC,EAAAA,QAAAA,OAAS,YAExBH,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,eACbiB,EAAKU,KAAIC,GAEN/B,EAAAA,cAACgC,EAAAA,GAAO,CACNC,IAAKF,EAAIV,GACTa,GAAIH,EAAIT,KACRpB,UAAWiC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAQhC,EAAAA,QAAAA,IAAK,KAAIiC,GAAYjC,EAAAA,QAAAA,UAAW,GAE/D4B,EAAIrB,SAMZmB,EACG,C","sources":["webpack://webia_front/./src/pagesReact/settingsPassword/SettingsPassword.tsx","webpack://webia_front/./src/templatesReact/settingsTemplate/SettingsTemplate.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport s from '../../templatesReact/settingsTemplate/SettingsStyles.module.scss';\nimport { CustomButton } from 'components/CustomButton/CustomButton';\nimport { CustomInput } from 'components/CustomInput/CustomInput';\nimport chevronRight from '../../assets/svg/chevron-right.svg';\nimport SettingsTemplate from 'templatesReact/settingsTemplate/SettingsTemplate';\n\nconst SettingsPassword = () => {\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  return (\n    <SettingsTemplate>\n      <div className={s.container}>\n        <h4 className={s.title}>Password</h4>\n\n        <div className={s.fields}>\n          <CustomInput\n            placeholder={'Old password'}\n            value={oldPassword}\n            type='password'\n            onChange={setOldPassword}\n          />\n\n          <CustomInput\n            placeholder={'New password'}\n            value={newPassword}\n            type='password'\n            onChange={setNewPassword}\n          />\n        </div>\n\n        <CustomButton\n          text=\"Change password\"\n          variant='primary'\n          size='l'\n          width='full'\n          image={chevronRight}\n          imagePos='end'\n          onClick={() => console.log('save')}\n        />\n      </div>\n    </SettingsTemplate>\n  );\n};\n\nexport default SettingsPassword;","import React, { ReactNode } from 'react';\nimport s from './SettingsPage.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport { AppRoutes } from 'pagesReact';\n\nconst tabs = [\n  { id: 1, path: AppRoutes.SETTINGS_TAB_GENERAL, text: 'General' },\n  { id: 2, path: AppRoutes.SETTINGS_TAB_PROFILE, text: 'Profile' },\n  { id: 3, path: AppRoutes.SETTINGS_TAB_PASSWORD, text: 'Password' },\n  { id: 4, path: AppRoutes.SETTINGS_TAB_PLAN, text: 'Plan&Billing' },\n];\n\ntype PropsT = {\n  children: ReactNode;\n}\n\nconst SettingsPage = ({\n  children,\n}: PropsT) => {\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Settings</h1>\n\n      <div className={s.tabsContainer}>\n        {tabs.map(tab => {\n          return (\n            <NavLink\n              key={tab.id}\n              to={tab.path}\n              className={({ isActive }) => `${s.tab} ${isActive && s.tabActive}`}\n            >\n              {tab.text}\n            </NavLink>\n          );\n        })}\n      </div>\n\n      {children}\n    </div>\n  );\n};\n\nexport default SettingsPage;"],"names":["SettingsPassword","oldPassword","setOldPassword","useState","newPassword","setNewPassword","React","SettingsTemplate","className","s","CustomInput","placeholder","value","type","onChange","CustomButton","text","variant","size","width","image","chevronRight","imagePos","onClick","console","log","tabs","id","path","AppRoutes","SETTINGS_TAB_GENERAL","SETTINGS_TAB_PROFILE","SETTINGS_TAB_PASSWORD","SETTINGS_TAB_PLAN","_ref","children","map","tab","NavLink","key","to","_ref2","isActive"],"sourceRoot":""}