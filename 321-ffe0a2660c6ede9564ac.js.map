{"version":3,"file":"321-ffe0a2660c6ede9564ac.js","mappings":"+LA2CA,UApCwBA,KACtB,MAAM,EAACC,EAAK,EAACC,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,EAACC,EAAM,EAACC,IAAYF,EAAAA,EAAAA,UAAS,IAEnC,OACEG,EAAAA,cAACC,EAAAA,EAAgB,KACfD,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,WACdH,EAAAA,cAAA,MAAIE,UAAWC,EAAAA,QAAAA,OAAS,WAExBH,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,QACdH,EAAAA,cAACI,EAAAA,EAAW,CACVC,YAAa,WACbC,MAAOX,EACPY,SAAUX,IAGZI,EAAAA,cAACI,EAAAA,EAAW,CACVC,YAAa,QACbC,MAAOR,EACPS,SAAUR,KAIdC,EAAAA,cAACQ,EAAAA,EAAY,CACXC,KAAK,eACLC,QAAQ,UACRC,MAAM,OACNC,MAAOC,IACPC,SAAS,MACTC,QAASA,IAAMC,QAAQC,IAAI,WAGd,C,yGClCvB,MAAMC,EAAO,CACX,CAAEC,GAAI,EAAGC,KAAMC,EAAAA,EAAUC,qBAAsBb,KAAM,WACrD,CAAEU,GAAI,EAAGC,KAAMC,EAAAA,EAAUE,qBAAsBd,KAAM,WACrD,CAAEU,GAAI,EAAGC,KAAMC,EAAAA,EAAUG,sBAAuBf,KAAM,YACtD,CAAEU,GAAI,EAAGC,KAAMC,EAAAA,EAAUI,kBAAmBhB,KAAM,iBAkCpD,MA3BqBiB,IAEN,IAFO,SACpBC,GACOD,EAEP,OACE1B,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,WACdH,EAAAA,cAAA,MAAIE,UAAWC,EAAAA,QAAAA,OAAS,YAExBH,EAAAA,cAAA,OAAKE,UAAWC,EAAAA,QAAAA,eACbe,EAAKU,KAAIC,GAEN7B,EAAAA,cAAC8B,EAAAA,GAAO,CACNC,IAAKF,EAAIV,GACTa,GAAIH,EAAIT,KACRlB,UAAW+B,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAQ9B,EAAAA,QAAAA,IAAK,KAAI+B,GAAY/B,EAAAA,QAAAA,UAAW,GAE/D0B,EAAIpB,SAMZkB,EACG,C","sources":["webpack://webia_front/./src/pagesReact/settingsGeneral/SettingsGeneral.tsx","webpack://webia_front/./src/templatesReact/settingsTemplate/SettingsTemplate.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport s from '../../templatesReact/settingsTemplate/SettingsStyles.module.scss';\nimport { CustomButton } from 'components/CustomButton/CustomButton';\nimport { CustomInput } from 'components/CustomInput/CustomInput';\nimport chevronRight from '../../assets/svg/chevron-right.svg';\nimport SettingsTemplate from 'templatesReact/settingsTemplate/SettingsTemplate';\n\nconst SettingsGeneral = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  return (\n    <SettingsTemplate>\n      <div className={s.container}>\n        <h4 className={s.title}>General</h4>\n\n        <div className={s.fields}>\n          <CustomInput\n            placeholder={'Username'}\n            value={name}\n            onChange={setName}\n          />\n\n          <CustomInput\n            placeholder={'Email'}\n            value={email}\n            onChange={setEmail}\n          />\n        </div>\n\n        <CustomButton\n          text=\"Save changes\"\n          variant='primary'\n          width='full'\n          image={chevronRight}\n          imagePos='end'\n          onClick={() => console.log('save')}\n        />\n      </div>\n    </SettingsTemplate>\n  );\n};\n\nexport default SettingsGeneral;","import React, { ReactNode } from 'react';\nimport s from './SettingsPage.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport { AppRoutes } from 'pagesReact';\n\nconst tabs = [\n  { id: 1, path: AppRoutes.SETTINGS_TAB_GENERAL, text: 'General' },\n  { id: 2, path: AppRoutes.SETTINGS_TAB_PROFILE, text: 'Profile' },\n  { id: 3, path: AppRoutes.SETTINGS_TAB_PASSWORD, text: 'Password' },\n  { id: 4, path: AppRoutes.SETTINGS_TAB_PLAN, text: 'Plan&Billing' },\n];\n\ntype PropsT = {\n  children: ReactNode;\n}\n\nconst SettingsPage = ({\n  children,\n}: PropsT) => {\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Settings</h1>\n\n      <div className={s.tabsContainer}>\n        {tabs.map(tab => {\n          return (\n            <NavLink\n              key={tab.id}\n              to={tab.path}\n              className={({ isActive }) => `${s.tab} ${isActive && s.tabActive}`}\n            >\n              {tab.text}\n            </NavLink>\n          );\n        })}\n      </div>\n\n      {children}\n    </div>\n  );\n};\n\nexport default SettingsPage;"],"names":["SettingsGeneral","name","setName","useState","email","setEmail","React","SettingsTemplate","className","s","CustomInput","placeholder","value","onChange","CustomButton","text","variant","width","image","chevronRight","imagePos","onClick","console","log","tabs","id","path","AppRoutes","SETTINGS_TAB_GENERAL","SETTINGS_TAB_PROFILE","SETTINGS_TAB_PASSWORD","SETTINGS_TAB_PLAN","_ref","children","map","tab","NavLink","key","to","_ref2","isActive"],"sourceRoot":""}